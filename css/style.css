@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* force inheritence on box-sizing for all elms */
  box-sizing: inherit;
}

html {
  /* 10/16=62.5% */
  /* .625*16=10 */
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
  /* padding not inherited */
  padding: 3rem;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 1.6rem; */
  line-height: 1.7;
  color: #777;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* stop elm from shaking, hides back part of an elm */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}
.heading-primary__text--main {
  display: block;
  font-size: 6rem;
  font-weight: 40rem;
  letter-spacing: 3.5rem;
  /* remove the last space added by letter-spacing */
  margin-right: -3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */
}
.heading-primary__text--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* remove the last space added by letter-spacing */
  margin-right: -1.75rem;
  animation: moveInRight 1s ease-out;
}

.btn {
  /* psudo class to style elm under a special condition */
}
.btn:link, .btn:visited {
  position: relative;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  font-size: 1.6rem;
  /* animation must be in the initial state */
  transition: all 0.2s;
}
.btn:hover {
  /* in CSS y-axis moves from top to bottom, so top is negative, bottom is posetive */
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* when button is hovered, apply styles for 'after' psudo elm */
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn:active {
  /* -1 in relation to link state, not the hover state */
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}
.btn--white {
  background-color: #fff;
  color: #777;
}
.btn--white::after {
  background-color: #fff;
}
.btn::after {
  content: "";
  display: inline-block;
  /* 100% of the width of the button */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--animated {
  /* added a 0.75s delay */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* applies the styles of 0% of the animation before the aimation starts, because of the delay this is needed */
  animation-fill-mode: backwards;
}

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto;
}
.row:not(:last-child) {
  margin-bottom: 8rem;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row [class^=col-] {
  background-color: orangered;
  float: left;
}
.row [class^=col-]:not(:last-child) {
  margin-right: 6rem;
}
.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
}
.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3);
}
.row .col-2-of-3 {
  width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem);
}
.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4);
}
.row .col-2-of-4 {
  width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem);
}
.row .col-3-of-4 {
  width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem);
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* makes the entrie image fit fill the container (preserves aspect-ratio), makes bg image adopt to the elment size */
  background-size: cover;
  /* top of image always stays at top of container, bottom gets cropped instead */
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}
.header__text-box {
  position: absolute;
  /* in relation to parent elm */
  top: 40%;
  left: 50%;
  /* shift 50% in relation to elm, itself */
  transform: translate(-50%, -50%);
  text-align: center;
}

/*# sourceMappingURL=style.css.map */
