.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }
  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent; //this way screen doesn't move up when a border is added
    width: 90%;
    display: block; //so that it would have it's own line
    transition: all 0.3s; //animates the focus color change from red to green

    @include respond(tab-port) {
      width: 100%;
    }

    &:focus {
      outline: none; //default focus
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // sudo elm has 2 :: represent things that are actually on the webpage (such as after)
    // but a sudo class has 1 : sudo class stands more fore states like hover, or focus
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__radio-input {
    display: none;
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem; //align it with the input
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  // + is adjacent sibling selector, ~ is general sibling selector, label needs to be after the input for the sibling selector to work
  &__input:placeholder-shown + &__label {
    opacity: 0; //use opacity so that we can animate it
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block; //won't create any line breaks

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;

    // the circle inside the radio button
    &::after {
      content: '';
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute; //position on parent doesn't need to be relative, it can be absolute aswell
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0; //by default it's invisible, (so if nothing is checked)
      transition: opacity 0.2s;
    }
  }

  // when radio button is check, then make the radio-button's circle visible
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
