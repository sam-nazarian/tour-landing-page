@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:    Phone
600 - 900px:  Tablet portrait
900 - 1200px: Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px+:    Big desktop

$breakpoint argument choices
- $phone
- $tab-port
- $tab-land
- $big-desktop

1 em = 16px
*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      //600px
      @content;
    }
  }
  @if $breakpoint == tab-port {
    //900px
    @media (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    //1200px
    @media (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    // the min-width that this query will happen
    //1800px
    @media (min-width: 112.5em) {
      @content;
    }
  }
}

@function base-font-size($pixels) {
  @return percentage(calc($pixels / 16px));
}

// @mixin respond($breakpoint) {
//   @media (max-width: calc(calc($breakpoint / 16px) * 1em)) {
//     @content;
//   }
// }
// @mixin respondMin($breakpoint) {
//   @media (min-width: calc(calc($breakpoint / 16px) * 1em)) {
//     @content;
//   }
// }

// works also, but above is better
// @mixin respond-phone {
//   @media (max-width: 600px) {
//     @content; //allows to pass a block of code into a mixin
//   }
// }
